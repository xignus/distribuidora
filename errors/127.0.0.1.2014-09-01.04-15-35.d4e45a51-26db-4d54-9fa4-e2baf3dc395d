(dp1
S'output'
p2
S"<type 'exceptions.TypeError'> int() argument must be a string or a number, not 'NoneType'"
p3
sS'layer'
p4
S'/home/marco/trabajo/experimental/web2py/applications/distribuidora/controllers/adminweb.py'
p5
sS'code'
p6
S'#-*- coding: utf-8 -*-\n\ndef index():\n    return dict()\n\ndef slideshow():\n    nueva=SQLFORM(db.slideshow)\n    if nueva.process().accepts:\n        pass\n    elif nueva.errors:\n        response.flash="Errors!"\n        \n    return dict(nueva=nueva)\n\ndef productos():\n    # nuevo = SQLFORM(db.productos)\n\n    # if nuevo.process().accepts:\n    #     session.flash="El producto ha sido agregado"\n    # elif nuevo.errors:\n    #     response.flash="Por favor revise los datos"\n    db.productos.id.readable=False\n    lista = SQLFORM.grid(db.productos, ui=\'jquery-ui\', user_signature=False)\n\n    return dict(lista=lista)\n\ndef empresa():\n    if (db(db.empresa.id>0).select()):\n        empresa=SQLFORM(db.empresa, 1)\n    else:\n        empresa=SQLFORM(db.empresa)\n\n    if empresa.process().accepts:\n        session.flash="Se han guardado los datos correctamente"\n    elif empresa.errors:\n        response.flash="Revise los datos"\n    return dict(empresa=empresa)\n\ndef servicios():\n    listado=db((db.servicios.id>0)&(db.detalles.servicio==db.servicios.id)&(db.detalles.publicar==True)).select()\n\n    nuevo = SQLFORM(db.servicios)\n\n    if nuevo.process().accepts:\n        session.flash="Se han guardado los datos correctamente"\n        redirect(URL(\'adminweb\',\'nuevoservicio\', args=(nuevo.vars.id)))\n    elif nuevo.errors:\n        response.flash="Revise los datos"\n\n    return dict(listado=listado, nuevo=nuevo)\n\ndef nuevoservicio():\n    db.detalles.servicio.default=int(request.args(0))\n    nuevo=SQLFORM(db.detalles)\n\n    if nuevo.process().accepts:\n        session.flash="Se han guardado los datos correctamente"\n    elif nuevo.errors:\n        response.flash="Revise los datos"\n\n    return dict(nuevo=nuevo)\n\nresponse._vars=response._caller(nuevoservicio)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/home/marco/trabajo/experimental/web2py/gluon/restricted.py", line 221, in restricted\n    exec ccode in environment\n  File "/home/marco/trabajo/experimental/web2py/applications/distribuidora/controllers/adminweb.py", line 63, in <module>\n  File "/home/marco/trabajo/experimental/web2py/gluon/globals.py", line 389, in <lambda>\n    self._caller = lambda f: f()\n  File "/home/marco/trabajo/experimental/web2py/applications/distribuidora/controllers/adminweb.py", line 53, in nuevoservicio\n    db.detalles.servicio.default=int(request.args(0))\nTypeError: int() argument must be a string or a number, not \'NoneType\'\n'
p11
s.